{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/dist/boomerang.js","boomerang.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","angular","controller","$rootScope","$mdMedia","$mdSidenav","Config","NavService","mc","this","chapterName","name","googlePlusLink","id","gdgLink","twitterLink","twitter","facebookLink","facebook","meetupLink","meetup","canonical","domain","registerNavListener","tab","navTab","config","$routeProvider","$locationProvider","$mdThemingProvider","$mdIconProvider","hashPrefix","when","templateUrl","controllerAs","otherwise","redirectTo","theme","primaryPalette","accentPalette","default","fontSet","factory","googleApi","pwaId","dateFormat","cover","title","subtitle","button","text","url","activities","techTalks","codeLabs","hackathons","devFests","appClinics","panels","designSprints","roundTables","setNavTab","tabValue","navListener","getNavTab","listenerToRegister","$http","$sce","vm","loading","jsonp","success","data","desc","aboutMe","trustAsHtml","coverPhoto","status","error","activityList","description","color","icon","push","$log","$filter","events","past","future","headers","Accept","timeout","items","about","replace","response","upcomingError","debug","getPastEventsPage","page","pages","pastError","filter","hashLinky","startNode","currentNode","childNodes","nodeType","ELEMENT_NODE","TEXT_NODE","hashtagRegex","textContent","linkifiedDOM","innerHTML","insertBefore","removeChild","document","createElement","inputDOM","input","linkify","$provide","PLURAL_CATEGORY","ZERO","ONE","TWO","FEW","MANY","OTHER","value","DATETIME_FORMATS","AMPMS","DAY","ERANAMES","ERAS","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","NUMBER_FORMATS","CURRENCY_SYM","DECIMAL_SEP","GROUP_SEP","PATTERNS","gSize","lgSize","maxFrac","minFrac","minInt","negPre","negSuf","posPre","posSuf","pluralCat","optPrecision","$timeout","handleError","item","actor","object","itemTitle","html","published","actorImage","entry","entries","content","Date","RegExp","join","image","substr","via","body","date","updated","reshares","resharers","totalItems","plusones","plusoners","comments","replies","news","gapi","plusone","go","organizers","photos","pwa","photoList","feed","photo","link","href","src","alt","$t","summary","errorMsg","directive","scope","article","attachment","transclude","element","videoUrl","trustAsResourceUrl","embed","getDynamicHeight","prop","restrict","gplusId","$watch","oldVal","newVal","person"],"mappings":"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","file":"boomerang.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","angular.module('gdgXBoomerang', ['ngRoute', 'ngSanitize', 'ngAria', 'ngAnimate', 'ngMaterial'])\n.controller('MainController', function ($rootScope, $mdMedia, $mdSidenav, Config, NavService) {\n    var mc = this;\n    mc.chapterName = Config.name;\n    mc.googlePlusLink = 'https://plus.google.com/' + Config.id;\n    mc.gdgLink = 'https://developers.google.com/groups/chapter/' + Config.id + '/';\n    mc.twitterLink = Config.twitter ? 'https://twitter.com/' + Config.twitter : null;\n    mc.facebookLink = Config.facebook ? 'https://www.facebook.com/' + Config.facebook : null;\n    mc.meetupLink = Config.meetup ? 'http://www.meetup.com/' + Config.meetup : null;\n    $rootScope.$mdMedia = $mdMedia;\n    $rootScope.$mdSidenav = $mdSidenav;\n    $rootScope.canonical = Config.domain;\n\n    NavService.registerNavListener(function (tab) {\n        mc.navTab = tab;\n    });\n});\n\nangular.module('gdgXBoomerang')\n.config(function ($routeProvider, $locationProvider, $mdThemingProvider, $mdIconProvider) {\n\n    $locationProvider.hashPrefix('!');\n\n    $routeProvider.\n        when('/about', {templateUrl: 'app/about/about.html', controller: 'AboutController', controllerAs: 'vm'}).\n        when('/news', {templateUrl: 'app/news/news.html', controller: 'NewsController', controllerAs: 'vm'}).\n        when('/events', {templateUrl: 'app/events/events.html', controller: 'EventsController', controllerAs: 'vm'}).\n        when('/photos', {templateUrl: 'app/photos/photos.html', controller: 'PhotosController', controllerAs: 'vm'}).\n        when('/activities', {templateUrl: 'app/activities/activities.html',\n            controller: 'ActivitiesController', controllerAs: 'vm'}).\n        when('/organizers', {templateUrl: 'app/organizers/organizers.html',\n            controller: 'OrganizersController', controllerAs: 'vm'}).\n        otherwise({ redirectTo: '/about' });\n\n    $mdThemingProvider.theme('default')\n        .primaryPalette('blue')\n        .accentPalette('green', {\n            'default': 'A700'\n        });\n\n    $mdIconProvider.fontSet('fa', 'fontawesome');\n});\n\nangular.module('gdgXBoomerang')\n    .factory('Config', function () {\n        return {\n            // TODO Modify these to configure your app\n            'name': 'GDG Senador Canedo',\n            'id': '102698524984620076019',\n            'googleApi': 'AIzaSyA-VxjbVX8RK1z_p8jlGNYVlxRIvaqmIVI',\n            'pwaId': '6209875710450058305', // Picasa Web Album id, must belong to Google+ id above\n            'domain': 'http://www.gdgsenadorcanedo.org',\n            'twitter': 'gdgscanedo',\n            'facebook': 'gdgsenadorcanedo',\n            'meetup': 'pt/GDG-Senador-Canedo-meetup',\n            // Change to 'EEEE, MMMM d, y - H:mm' for 24 hour time format.\n            'dateFormat': 'EEEE, MMMM d, y - H:mm',\n            'cover': {\n                title: 'Eventos GDG através do mundo',\n                subtitle: 'Eventos organizados por diversos GDGS',\n                button: {\n                    text: 'Procure um evento GDG',\n                    url: 'http://gdg.events/'\n                }\n            },\n            'activities': {\n                techTalks: true,\n                codeLabs: true,\n                hackathons: true,\n                devFests: true,\n                appClinics: true,\n                panels: true,\n                designSprints: true,\n                roundTables: true\n            }\n            // To update the snippet which is used for sharing, see the TODO in the index.html.\n        };\n    });\n\nangular.module('gdgXBoomerang')\n.factory('NavService', function () {\n    var navTab = '0';\n    var navListener;\n\n    return {\n        setNavTab: setNavTab,\n        getNavTab: getNavTab,\n        registerNavListener: registerNavListener\n    };\n\n    function setNavTab(tabValue) {\n        navTab = tabValue;\n        if (navListener) {\n            navListener(navTab);\n        }\n    }\n\n    function getNavTab() {\n        return navTab;\n    }\n\n    function registerNavListener(listenerToRegister) {\n        navListener = listenerToRegister;\n    }\n});\n\nangular.module('gdgXBoomerang')\n.controller('AboutController', function ($http, $sce, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(0);\n    vm.cover = Config.cover;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n            '?callback=JSON_CALLBACK&fields=aboutMe%2Ccover%2Cimage%2CplusOneCount&key=' + Config.googleApi).\n        success(function (data) {\n            vm.desc = data.aboutMe;\n            $sce.trustAsHtml(vm.desc);\n\n            if (data.cover && data.cover.coverPhoto.url) {\n                vm.cover.url = data.cover.coverPhoto.url;\n            }\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (error) {\n            vm.desc = 'Sorry, we failed to retrieve the About text from the Google+ API.';\n            vm.loading = false;\n            vm.status = 'ready';\n        });\n});\n\nangular.module('gdgXBoomerang')\n.controller('ActivitiesController', function (Config, NavService) {\n    var vm = this;\n    vm.loading = false;\n    NavService.setNavTab(3);\n    vm.activities = [];\n\n    var activityList = {\n        techTalks: {\n            name: 'Palestras',\n            description: 'As palestras são apresentadas por especialistas técnicos que abramgem um amplo ' +\n            'conhecimento em tecnologias e áreas afins.',\n            color: 'purple',\n            icon: '/app/images/icons/ic_mic_48px.svg'\n        },\n        roundTables: {\n            name: 'Mesa redonda',\n            description: 'Evento informal onde todos da comunidade podem participar e dar suas opniões.',\n            color: 'darkBlue',\n            icon: '/app/images/icons/ic_local_pizza_48px.svg'\n        },\n        codeLabs: {\n            name: 'Code Labs',\n            description: 'Este tipo de evento é preparado para fornecer instruções passo-a-passo de uma determinada ' +\n            'tecnologia, é utilizado em introduções em novas tecnologias e maximizar o aprendizado prático',\n            color: 'green',\n            icon: '/app/images/icons/ic_code_48px.svg'\n        },\n        devFests: {\n            name: 'Dev Fests',\n            description: 'GDG Dev Fests são grades eventos, onde reunimos uma grande quantidade de pessoas ' +\n            'interessadas em tecnologias e são realizados palestras, codelabs, hackatons e muito mais...',\n            color: 'deepBlue',\n            icon: '/app/images/icons/ic_event_48px.svg'\n        },\n        appClinics: {\n            name: 'App Clinics',\n            description: 'Estes eventos voltado para comunidade que procura reunir desenvolvedores, desings, ' +\n            'testers e especialistas em usabilidade para avaliar aplicativos específicos com foco na ' +\n            'crítica construtiva, resolução de problemas e colaboração',\n            color: 'yellow',\n            icon: '/app/images/icons/ic_local_hospital_48px.svg'\n        },\n        panels: {\n            name: 'Panels',\n            description: 'Este evento reune vários especialistas sobre um determinado tópico, e são realizados ' +\n            'palestras, debates, mesas redondas tudo com interação da plateia.',\n            color: 'lightPurple',\n            icon: '/app/images/icons/ic_people_48px.svg'\n        },\n        hackathons: {\n            name: 'Hackathons',\n            description: 'Este evento envolve uma competição de código, onde o participante colabora intensivamente ' +\n            'em um projeto especifico ou desafios.Muitas veses os participantes possuiem tempo e ganhadores ' +\n            'recebem premios',\n            color: 'red',\n            icon: '/app/images/icons/ic_timer_48px.svg'\n        },\n        designSprints: {\n            name: 'Design Sprints',\n            description: 'Evento com foco em Brainstorming colaborativos e intensos, onde o desing do produto é ' +\n            'fundamental, iterar através das diversas fases: entendimento, esboço, decisão, prototipo e testes',\n            color: 'pink',\n            icon: '/app/images/icons/ic_directions_run_48px.svg'\n        }\n    };\n\n    if (Config.activities.techTalks) {\n        vm.activities.push(activityList.techTalks);\n    }\n    if (Config.activities.roundTables) {\n        vm.activities.push(activityList.roundTables);\n    }\n    if (Config.activities.codeLabs) {\n        vm.activities.push(activityList.codeLabs);\n    }\n    if (Config.activities.devFests) {\n        vm.activities.push(activityList.devFests);\n    }\n    if (Config.activities.appClinics) {\n        vm.activities.push(activityList.appClinics);\n    }\n    if (Config.activities.panels) {\n        vm.activities.push(activityList.panels);\n    }\n    if (Config.activities.hackathons) {\n        vm.activities.push(activityList.hackathons);\n    }\n    if (Config.activities.designSprints) {\n        vm.activities.push(activityList.designSprints);\n    }\n});\n\nangular.module('gdgXBoomerang')\n.controller('EventsController', function ($http, $log, $filter, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(2);\n    vm.chapterName = Config.name;\n    vm.loading = true;\n    vm.dateFormat = Config.dateFormat;\n    vm.events = { past:[], future:[] };\n\n    var url = 'https://hub.gdgx.io/api/v1/chapters/' + Config.id + '/events/upcoming?callback=JSON_CALLBACK';\n    var headers = { 'headers': { 'Accept': 'application/json;' }, 'timeout': 2000 };\n    $http.jsonp(url, headers)\n        .success(function (data) {\n            for (var i = data.items.length - 1; i >= 0; i--) {\n                if (data.items[i].about) {\n                    data.items[i].about =\n                        data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                } else {\n                    data.items[i].about = '';\n                }\n                vm.events.future.push(data.items[i]);\n            }\n            vm.events.future = $filter('orderBy')(vm.events.future, 'start', false);\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (response) {\n            vm.upcomingError = 'Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API.';\n            vm.loading = false;\n            vm.status = 'ready';\n            $log.debug('Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API: ' + response);\n        });\n\n    var getPastEventsPage = function(page) {\n        var url = 'https://hub.gdgx.io/api/v1/chapters/' + Config.id +\n            '/events/past?callback=JSON_CALLBACK&page=' + page;\n        var headers = { 'headers': {'Accept': 'application/json;'}, 'timeout': 2000 };\n        $http.jsonp(url, headers)\n            .success(function (data) {\n                var i;\n                for (i = data.items.length - 1; i >= 0; i--) {\n                    if (data.items[i].about) {\n                        data.items[i].about =\n                            data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                    } else {\n                        data.items[i].about = '';\n                    }\n                    vm.events.past.push(data.items[i]);\n                }\n                if (data.pages === page) {\n                    vm.events.past = $filter('orderBy')(vm.events.past, 'start', true);\n                    vm.loading = false;\n                    vm.status = 'ready';\n                } else {\n                    getPastEventsPage(page + 1);\n                }\n            })\n            .error(function (response) {\n                vm.pastError = 'Sorry, we failed to retrieve the past events from the GDG-X Hub API.';\n                vm.loading = false;\n                vm.status = 'ready';\n                $log.debug('Sorry, we failed to retrieve the past events from the GDG-X Hub API: ' + response);\n            });\n    };\n    getPastEventsPage(1);\n});\n\n// Google+ hashtag linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\nangular.module('gdgXBoomerang')\n.filter('hashLinky', function() {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return hashLinky(inputDOM).innerHTML;\n    };\n\n    function hashLinky(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    hashLinky(currentNode);\n                    break;\n                case TEXT_NODE:\n                    var hashtagRegex = /#([A-Za-z0-9-_]+)/g;\n                    currentNode.textContent =  currentNode.textContent.replace(hashtagRegex,\n                        '<a href=\"https://plus.google.com/s/%23$1\" target=\"_blank\">#$1</a>');\n\n                    linkifiedDOM.innerHTML = currentNode.textContent;\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n});\n\n// HTML-ified linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\nangular.module('gdgXBoomerang')\n.filter('htmlLinky', function($filter) {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return linkify(inputDOM).innerHTML;\n    };\n\n    function linkify(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    linkify(currentNode);\n                    break;\n                case TEXT_NODE:\n                    linkifiedDOM.innerHTML = $filter('linky')(currentNode.textContent, '_blank');\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n});\n\n(function () {\n\n    'use strict';\n    angular.module('ngLocale', [], ['$provide', function ($provide) {\n        var PLURAL_CATEGORY = {ZERO: 'zero', ONE: 'one', TWO: 'two', FEW: 'few', MANY: 'many', OTHER: 'other'};\n        $provide.value('$locale', {\n            'DATETIME_FORMATS': {\n                'AMPMS': [\n                    'AM',\n                    'PM'\n                ],\n                'DAY': [\n                    'domingo',\n                    'segunda-feira',\n                    'ter\\u00e7a-feira',\n                    'quarta-feira',\n                    'quinta-feira',\n                    'sexta-feira',\n                    's\\u00e1bado'\n                ],\n                'ERANAMES': [\n                    'Antes de Cristo',\n                    'Ano do Senhor'\n                ],\n                'ERAS': [\n                    'a.C.',\n                    'd.C.'\n                ],\n                'FIRSTDAYOFWEEK': 6,\n                'MONTH': [\n                    'janeiro',\n                    'fevereiro',\n                    'mar\\u00e7o',\n                    'abril',\n                    'maio',\n                    'junho',\n                    'julho',\n                    'agosto',\n                    'setembro',\n                    'outubro',\n                    'novembro',\n                    'dezembro'\n                ],\n                'SHORTDAY': [\n                    'dom',\n                    'seg',\n                    'ter',\n                    'qua',\n                    'qui',\n                    'sex',\n                    's\\u00e1b'\n                ],\n                'SHORTMONTH': [\n                    'jan',\n                    'fev',\n                    'mar',\n                    'abr',\n                    'mai',\n                    'jun',\n                    'jul',\n                    'ago',\n                    'set',\n                    'out',\n                    'nov',\n                    'dez'\n                ],\n                'WEEKENDRANGE': [\n                    5,\n                    6\n                ],\n                'fullDate': 'EEEE, d \"de\" MMMM \"de\" y',\n                'longDate': 'd \"de\" MMMM \"de\" y',\n                'medium': 'd \"de\" MMM \"de\" y HH:mm:ss',\n                'mediumDate': 'd \"de\" MMM \"de\" y',\n                'mediumTime': 'HH:mm:ss',\n                'short': 'dd/MM/yy HH:mm',\n                'shortDate': 'dd/MM/yy',\n                'shortTime': 'HH:mm'\n            },\n            'NUMBER_FORMATS': {\n                'CURRENCY_SYM': 'R$',\n                'DECIMAL_SEP': ',',\n                'GROUP_SEP': '.',\n                'PATTERNS': [\n                    {\n                        'gSize': 3,\n                        'lgSize': 3,\n                        'maxFrac': 3,\n                        'minFrac': 0,\n                        'minInt': 1,\n                        'negPre': '-',\n                        'negSuf': '',\n                        'posPre': '',\n                        'posSuf': ''\n                    },\n                    {\n                        'gSize': 3,\n                        'lgSize': 3,\n                        'maxFrac': 2,\n                        'minFrac': 2,\n                        'minInt': 1,\n                        'negPre': '-\\u00a4',\n                        'negSuf': '',\n                        'posPre': '\\u00a4',\n                        'posSuf': ''\n                    }\n                ]\n            },\n            'id': 'pt-br',\n            'pluralCat': function (n, optPrecision) {\n                if (n >= 0 && n <= 2 && n !== 2) {\n                    return PLURAL_CATEGORY.ONE;\n                }\n                return PLURAL_CATEGORY.OTHER;\n            }\n        });\n    }]);\n})();\n\nangular.module('gdgXBoomerang')\n.controller('NewsController', function ($http, $timeout, $filter, $log, $sce, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(1);\n    vm.loading = true;\n    vm.chapterName = Config.name;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n        '/activities/public?callback=JSON_CALLBACK&maxResults=20&key=' + Config.googleApi)\n        .success(function (response) {\n            var entries = [], i;\n            var item, actor, object, itemTitle, html;\n            var published, actorImage, entry;\n\n            if (!response.items) {\n                handleError('Response from server contained no news items.');\n                return;\n            }\n\n            for (i = 0; i < response.items.length; i++) {\n                item = response.items[i];\n                actor = item.actor || {};\n                object = item.object || {};\n                itemTitle = object.content;\n                published = $filter('date')(new Date(item.published), 'fullDate');\n                html = [];\n\n                html.push(itemTitle.replace(new RegExp('\\n', 'g'), '<br />').replace('<br><br>', '<br />'));\n                html = html.join('');\n                html = $sce.trustAsHtml(html);\n\n                actorImage = actor.image.url;\n                actorImage = actorImage.substr(0, actorImage.length - 2) + '16';\n\n                entry = {\n                    via: {\n                        name: 'Google+',\n                        url: item.url\n                    },\n                    published: published,\n                    body: html,\n                    date: item.updated,\n                    reshares: (object.resharers || {}).totalItems,\n                    plusones: (object.plusoners || {}).totalItems,\n                    comments: (object.replies || {}).totalItems,\n                    icon: actorImage,\n                    item: item,\n                    object: object\n                };\n\n                entries.push(entry);\n            }\n            vm.news = $filter('orderBy')(entries, 'date', true);\n            $timeout(function () {\n                gapi.plusone.go();\n            });\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(handleError);\n\n    function handleError(error) {\n        vm.desc = 'Sorry, we failed to retrieve the news from the Google+ API.';\n        vm.loading = false;\n        vm.status = 'ready';\n        $log.debug('Sorry, we failed to retrieve the news from the Google+ API: ' + error);\n    }\n});\n\nangular.module('gdgXBoomerang')\n.controller('OrganizersController', function ($http, Config, NavService) {\n    var vm = this;\n    vm.loading = false;\n    NavService.setNavTab(4);\n\n    var url = 'https://hub.gdgx.io/api/v1/chapters/' + Config.id + '?callback=JSON_CALLBACK';\n    var headers = { 'headers': { 'Accept': 'application/json;' }, 'timeout': 2000 };\n    $http.jsonp(url, headers).success(function (data) {\n        if (data.organizers) {\n            vm.organizers = data.organizers;\n        }\n    });\n});\n\nangular.module('gdgXBoomerang')\n.controller('PhotosController', function ($http, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(5);\n    vm.chapterName = Config.name;\n    vm.photos = [];\n\n    var pwa = 'https://picasaweb.google.com/data/feed/api/user/' + Config.id + '/albumid/' + Config.pwaId +\n        '?access=public&alt=json-in-script&kind=photo&max-results=50&' +\n        'fields=entry(title,link/@href,summary,content/@src)&v=2.0&callback=JSON_CALLBACK';\n\n    $http.jsonp(pwa).\n        success(function (data) {\n            var photoList = data.feed.entry;\n            var i;\n            if (photoList) {\n                // Use reverse ordering newest first\n                for (i = photoList.length - 1; i >= 0; i--) {\n                    var photo = {\n                        link: photoList[i].link[2].href,\n                        src: photoList[i].content.src,\n                        alt: photoList[i].title.$t,\n                        title: photoList[i].summary.$t\n                    };\n                    vm.photos.push(photo);\n                }\n            }\n            vm.loading = false;\n        })\n        .error(function () {\n            vm.errorMsg = 'Sorry, we failed to retrieve the photos from the Picasa Web Albums API. ' +\n                'Logging out of your Google Account and logging back in may resolve this issue.';\n            vm.loading = false;\n        });\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusAlbum', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: '/app/news/components/gplusAlbum.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusArticle', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: '/app/news/components/gplusArticle.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusEvent', function () {\n    return {\n        scope: { article: '=' },\n        templateUrl: '/app/news/components/gplusEvent.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusNoAttachments', function () {\n    return {\n        scope: { article: '=' },\n        templateUrl: '/app/news/components/gplusNoAttachments.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPhotoVideo', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: '/app/news/components/gplusPhotoVideo.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostContent', function () {\n    return {\n        transclude: true,\n        templateUrl: '/app/news/components/gplusPostContent.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostImage', function () {\n    return {\n        templateUrl: '/app/news/components/gplusPostImage.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostVideo', function ($sce) {\n    return {\n        link: function (scope, element) {\n            scope.videoUrl = $sce.trustAsResourceUrl(scope.attachment.embed.url);\n            scope.getDynamicHeight = function () {\n                return (element.prop('clientWidth') * 0.6) + 'px';\n            };\n        },\n        templateUrl: '/app/news/components/gplusPostVideo.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('newsItemFooter', function () {\n    return {\n        templateUrl: '/app/news/components/newsItemFooter.html'\n    };\n});\n\n'use strict';\n\nangular.module('gdgXBoomerang')\n.directive('gplusPerson', function ($http, $filter, Config) {\n    return {\n        restrict: 'EA',\n        templateUrl: 'app/organizers/components/gplus_person.html',\n        scope: {\n            gplusId: '='\n        },\n        link: function (scope) {\n            scope.$watch('gplusId', function (oldVal, newVal) {\n                if (newVal) {\n                    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + newVal +\n                        '?callback=JSON_CALLBACK&fields=aboutMe%2CdisplayName%2Cimage&key=' + Config.googleApi)\n                        .success(function (data) {\n                            if (data && data.image && data.image.url) {\n                                data.image.url = data.image.url.replace('sz=50', 'sz=170');\n                            }\n                            scope.person = data;\n                        });\n                }\n            });\n        }\n    };\n});\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nangular.module('gdgXBoomerang', ['ngRoute', 'ngSanitize', 'ngAria', 'ngAnimate', 'ngMaterial'])\n.controller('MainController', [\"$rootScope\", \"$mdMedia\", \"$mdSidenav\", \"Config\", \"NavService\", function ($rootScope, $mdMedia, $mdSidenav, Config, NavService) {\n    var mc = this;\n    mc.chapterName = Config.name;\n    mc.googlePlusLink = 'https://plus.google.com/' + Config.id;\n    mc.gdgLink = 'https://developers.google.com/groups/chapter/' + Config.id + '/';\n    mc.twitterLink = Config.twitter ? 'https://twitter.com/' + Config.twitter : null;\n    mc.facebookLink = Config.facebook ? 'https://www.facebook.com/' + Config.facebook : null;\n    mc.meetupLink = Config.meetup ? 'http://www.meetup.com/' + Config.meetup : null;\n    $rootScope.$mdMedia = $mdMedia;\n    $rootScope.$mdSidenav = $mdSidenav;\n    $rootScope.canonical = Config.domain;\n\n    NavService.registerNavListener(function (tab) {\n        mc.navTab = tab;\n    });\n}]);\n\nangular.module('gdgXBoomerang')\n.config([\"$routeProvider\", \"$locationProvider\", \"$mdThemingProvider\", \"$mdIconProvider\", function ($routeProvider, $locationProvider, $mdThemingProvider, $mdIconProvider) {\n\n    $locationProvider.hashPrefix('!');\n\n    $routeProvider.\n        when('/about', {templateUrl: 'app/about/about.html', controller: 'AboutController', controllerAs: 'vm'}).\n        when('/news', {templateUrl: 'app/news/news.html', controller: 'NewsController', controllerAs: 'vm'}).\n        when('/events', {templateUrl: 'app/events/events.html', controller: 'EventsController', controllerAs: 'vm'}).\n        when('/photos', {templateUrl: 'app/photos/photos.html', controller: 'PhotosController', controllerAs: 'vm'}).\n        when('/activities', {templateUrl: 'app/activities/activities.html',\n            controller: 'ActivitiesController', controllerAs: 'vm'}).\n        when('/organizers', {templateUrl: 'app/organizers/organizers.html',\n            controller: 'OrganizersController', controllerAs: 'vm'}).\n        otherwise({ redirectTo: '/about' });\n\n    $mdThemingProvider.theme('default')\n        .primaryPalette('blue')\n        .accentPalette('green', {\n            'default': 'A700'\n        });\n\n    $mdIconProvider.fontSet('fa', 'fontawesome');\n}]);\n\nangular.module('gdgXBoomerang')\n    .factory('Config', function () {\n        return {\n            // TODO Modify these to configure your app\n            'name': 'GDG Senador Canedo',\n            'id': '102698524984620076019',\n            'googleApi': 'AIzaSyA-VxjbVX8RK1z_p8jlGNYVlxRIvaqmIVI',\n            'pwaId': '6209875710450058305', // Picasa Web Album id, must belong to Google+ id above\n            'domain': 'http://www.gdgsenadorcanedo.org',\n            'twitter': 'gdgscanedo',\n            'facebook': 'gdgsenadorcanedo',\n            'meetup': 'pt/GDG-Senador-Canedo-meetup',\n            // Change to 'EEEE, MMMM d, y - H:mm' for 24 hour time format.\n            'dateFormat': 'EEEE, MMMM d, y - H:mm',\n            'cover': {\n                title: 'Eventos GDG através do mundo',\n                subtitle: 'Eventos organizados por diversos GDGS',\n                button: {\n                    text: 'Procure um evento GDG',\n                    url: 'http://gdg.events/'\n                }\n            },\n            'activities': {\n                techTalks: true,\n                codeLabs: true,\n                hackathons: true,\n                devFests: true,\n                appClinics: true,\n                panels: true,\n                designSprints: true,\n                roundTables: true\n            }\n            // To update the snippet which is used for sharing, see the TODO in the index.html.\n        };\n    });\n\nangular.module('gdgXBoomerang')\n.factory('NavService', function () {\n    var navTab = '0';\n    var navListener;\n\n    return {\n        setNavTab: setNavTab,\n        getNavTab: getNavTab,\n        registerNavListener: registerNavListener\n    };\n\n    function setNavTab(tabValue) {\n        navTab = tabValue;\n        if (navListener) {\n            navListener(navTab);\n        }\n    }\n\n    function getNavTab() {\n        return navTab;\n    }\n\n    function registerNavListener(listenerToRegister) {\n        navListener = listenerToRegister;\n    }\n});\n\nangular.module('gdgXBoomerang')\n.controller('AboutController', [\"$http\", \"$sce\", \"Config\", \"NavService\", function ($http, $sce, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(0);\n    vm.cover = Config.cover;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n            '?callback=JSON_CALLBACK&fields=aboutMe%2Ccover%2Cimage%2CplusOneCount&key=' + Config.googleApi).\n        success(function (data) {\n            vm.desc = data.aboutMe;\n            $sce.trustAsHtml(vm.desc);\n\n            if (data.cover && data.cover.coverPhoto.url) {\n                vm.cover.url = data.cover.coverPhoto.url;\n            }\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (error) {\n            vm.desc = 'Sorry, we failed to retrieve the About text from the Google+ API.';\n            vm.loading = false;\n            vm.status = 'ready';\n        });\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('ActivitiesController', [\"Config\", \"NavService\", function (Config, NavService) {\n    var vm = this;\n    vm.loading = false;\n    NavService.setNavTab(3);\n    vm.activities = [];\n\n    var activityList = {\n        techTalks: {\n            name: 'Palestras',\n            description: 'As palestras são apresentadas por especialistas técnicos que abramgem um amplo ' +\n            'conhecimento em tecnologias e áreas afins.',\n            color: 'purple',\n            icon: '/app/images/icons/ic_mic_48px.svg'\n        },\n        roundTables: {\n            name: 'Mesa redonda',\n            description: 'Evento informal onde todos da comunidade podem participar e dar suas opniões.',\n            color: 'darkBlue',\n            icon: '/app/images/icons/ic_local_pizza_48px.svg'\n        },\n        codeLabs: {\n            name: 'Code Labs',\n            description: 'Este tipo de evento é preparado para fornecer instruções passo-a-passo de uma determinada ' +\n            'tecnologia, é utilizado em introduções em novas tecnologias e maximizar o aprendizado prático',\n            color: 'green',\n            icon: '/app/images/icons/ic_code_48px.svg'\n        },\n        devFests: {\n            name: 'Dev Fests',\n            description: 'GDG Dev Fests são grades eventos, onde reunimos uma grande quantidade de pessoas ' +\n            'interessadas em tecnologias e são realizados palestras, codelabs, hackatons e muito mais...',\n            color: 'deepBlue',\n            icon: '/app/images/icons/ic_event_48px.svg'\n        },\n        appClinics: {\n            name: 'App Clinics',\n            description: 'Estes eventos voltado para comunidade que procura reunir desenvolvedores, desings, ' +\n            'testers e especialistas em usabilidade para avaliar aplicativos específicos com foco na ' +\n            'crítica construtiva, resolução de problemas e colaboração',\n            color: 'yellow',\n            icon: '/app/images/icons/ic_local_hospital_48px.svg'\n        },\n        panels: {\n            name: 'Panels',\n            description: 'Este evento reune vários especialistas sobre um determinado tópico, e são realizados ' +\n            'palestras, debates, mesas redondas tudo com interação da plateia.',\n            color: 'lightPurple',\n            icon: '/app/images/icons/ic_people_48px.svg'\n        },\n        hackathons: {\n            name: 'Hackathons',\n            description: 'Este evento envolve uma competição de código, onde o participante colabora intensivamente ' +\n            'em um projeto especifico ou desafios.Muitas veses os participantes possuiem tempo e ganhadores ' +\n            'recebem premios',\n            color: 'red',\n            icon: '/app/images/icons/ic_timer_48px.svg'\n        },\n        designSprints: {\n            name: 'Design Sprints',\n            description: 'Evento com foco em Brainstorming colaborativos e intensos, onde o desing do produto é ' +\n            'fundamental, iterar através das diversas fases: entendimento, esboço, decisão, prototipo e testes',\n            color: 'pink',\n            icon: '/app/images/icons/ic_directions_run_48px.svg'\n        }\n    };\n\n    if (Config.activities.techTalks) {\n        vm.activities.push(activityList.techTalks);\n    }\n    if (Config.activities.roundTables) {\n        vm.activities.push(activityList.roundTables);\n    }\n    if (Config.activities.codeLabs) {\n        vm.activities.push(activityList.codeLabs);\n    }\n    if (Config.activities.devFests) {\n        vm.activities.push(activityList.devFests);\n    }\n    if (Config.activities.appClinics) {\n        vm.activities.push(activityList.appClinics);\n    }\n    if (Config.activities.panels) {\n        vm.activities.push(activityList.panels);\n    }\n    if (Config.activities.hackathons) {\n        vm.activities.push(activityList.hackathons);\n    }\n    if (Config.activities.designSprints) {\n        vm.activities.push(activityList.designSprints);\n    }\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('EventsController', [\"$http\", \"$log\", \"$filter\", \"Config\", \"NavService\", function ($http, $log, $filter, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(2);\n    vm.chapterName = Config.name;\n    vm.loading = true;\n    vm.dateFormat = Config.dateFormat;\n    vm.events = { past:[], future:[] };\n\n    var url = 'https://hub.gdgx.io/api/v1/chapters/' + Config.id + '/events/upcoming?callback=JSON_CALLBACK';\n    var headers = { 'headers': { 'Accept': 'application/json;' }, 'timeout': 2000 };\n    $http.jsonp(url, headers)\n        .success(function (data) {\n            for (var i = data.items.length - 1; i >= 0; i--) {\n                if (data.items[i].about) {\n                    data.items[i].about =\n                        data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                } else {\n                    data.items[i].about = '';\n                }\n                vm.events.future.push(data.items[i]);\n            }\n            vm.events.future = $filter('orderBy')(vm.events.future, 'start', false);\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (response) {\n            vm.upcomingError = 'Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API.';\n            vm.loading = false;\n            vm.status = 'ready';\n            $log.debug('Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API: ' + response);\n        });\n\n    var getPastEventsPage = function(page) {\n        var url = 'https://hub.gdgx.io/api/v1/chapters/' + Config.id +\n            '/events/past?callback=JSON_CALLBACK&page=' + page;\n        var headers = { 'headers': {'Accept': 'application/json;'}, 'timeout': 2000 };\n        $http.jsonp(url, headers)\n            .success(function (data) {\n                var i;\n                for (i = data.items.length - 1; i >= 0; i--) {\n                    if (data.items[i].about) {\n                        data.items[i].about =\n                            data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                    } else {\n                        data.items[i].about = '';\n                    }\n                    vm.events.past.push(data.items[i]);\n                }\n                if (data.pages === page) {\n                    vm.events.past = $filter('orderBy')(vm.events.past, 'start', true);\n                    vm.loading = false;\n                    vm.status = 'ready';\n                } else {\n                    getPastEventsPage(page + 1);\n                }\n            })\n            .error(function (response) {\n                vm.pastError = 'Sorry, we failed to retrieve the past events from the GDG-X Hub API.';\n                vm.loading = false;\n                vm.status = 'ready';\n                $log.debug('Sorry, we failed to retrieve the past events from the GDG-X Hub API: ' + response);\n            });\n    };\n    getPastEventsPage(1);\n}]);\n\n// Google+ hashtag linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\nangular.module('gdgXBoomerang')\n.filter('hashLinky', function() {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return hashLinky(inputDOM).innerHTML;\n    };\n\n    function hashLinky(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    hashLinky(currentNode);\n                    break;\n                case TEXT_NODE:\n                    var hashtagRegex = /#([A-Za-z0-9-_]+)/g;\n                    currentNode.textContent =  currentNode.textContent.replace(hashtagRegex,\n                        '<a href=\"https://plus.google.com/s/%23$1\" target=\"_blank\">#$1</a>');\n\n                    linkifiedDOM.innerHTML = currentNode.textContent;\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n});\n\n// HTML-ified linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\nangular.module('gdgXBoomerang')\n.filter('htmlLinky', [\"$filter\", function($filter) {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return linkify(inputDOM).innerHTML;\n    };\n\n    function linkify(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    linkify(currentNode);\n                    break;\n                case TEXT_NODE:\n                    linkifiedDOM.innerHTML = $filter('linky')(currentNode.textContent, '_blank');\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n}]);\n\n(function () {\n\n    'use strict';\n    angular.module('ngLocale', [], ['$provide', function ($provide) {\n        var PLURAL_CATEGORY = {ZERO: 'zero', ONE: 'one', TWO: 'two', FEW: 'few', MANY: 'many', OTHER: 'other'};\n        $provide.value('$locale', {\n            'DATETIME_FORMATS': {\n                'AMPMS': [\n                    'AM',\n                    'PM'\n                ],\n                'DAY': [\n                    'domingo',\n                    'segunda-feira',\n                    'ter\\u00e7a-feira',\n                    'quarta-feira',\n                    'quinta-feira',\n                    'sexta-feira',\n                    's\\u00e1bado'\n                ],\n                'ERANAMES': [\n                    'Antes de Cristo',\n                    'Ano do Senhor'\n                ],\n                'ERAS': [\n                    'a.C.',\n                    'd.C.'\n                ],\n                'FIRSTDAYOFWEEK': 6,\n                'MONTH': [\n                    'janeiro',\n                    'fevereiro',\n                    'mar\\u00e7o',\n                    'abril',\n                    'maio',\n                    'junho',\n                    'julho',\n                    'agosto',\n                    'setembro',\n                    'outubro',\n                    'novembro',\n                    'dezembro'\n                ],\n                'SHORTDAY': [\n                    'dom',\n                    'seg',\n                    'ter',\n                    'qua',\n                    'qui',\n                    'sex',\n                    's\\u00e1b'\n                ],\n                'SHORTMONTH': [\n                    'jan',\n                    'fev',\n                    'mar',\n                    'abr',\n                    'mai',\n                    'jun',\n                    'jul',\n                    'ago',\n                    'set',\n                    'out',\n                    'nov',\n                    'dez'\n                ],\n                'WEEKENDRANGE': [\n                    5,\n                    6\n                ],\n                'fullDate': 'EEEE, d \"de\" MMMM \"de\" y',\n                'longDate': 'd \"de\" MMMM \"de\" y',\n                'medium': 'd \"de\" MMM \"de\" y HH:mm:ss',\n                'mediumDate': 'd \"de\" MMM \"de\" y',\n                'mediumTime': 'HH:mm:ss',\n                'short': 'dd/MM/yy HH:mm',\n                'shortDate': 'dd/MM/yy',\n                'shortTime': 'HH:mm'\n            },\n            'NUMBER_FORMATS': {\n                'CURRENCY_SYM': 'R$',\n                'DECIMAL_SEP': ',',\n                'GROUP_SEP': '.',\n                'PATTERNS': [\n                    {\n                        'gSize': 3,\n                        'lgSize': 3,\n                        'maxFrac': 3,\n                        'minFrac': 0,\n                        'minInt': 1,\n                        'negPre': '-',\n                        'negSuf': '',\n                        'posPre': '',\n                        'posSuf': ''\n                    },\n                    {\n                        'gSize': 3,\n                        'lgSize': 3,\n                        'maxFrac': 2,\n                        'minFrac': 2,\n                        'minInt': 1,\n                        'negPre': '-\\u00a4',\n                        'negSuf': '',\n                        'posPre': '\\u00a4',\n                        'posSuf': ''\n                    }\n                ]\n            },\n            'id': 'pt-br',\n            'pluralCat': function (n, optPrecision) {\n                if (n >= 0 && n <= 2 && n !== 2) {\n                    return PLURAL_CATEGORY.ONE;\n                }\n                return PLURAL_CATEGORY.OTHER;\n            }\n        });\n    }]);\n})();\n\nangular.module('gdgXBoomerang')\n.controller('NewsController', [\"$http\", \"$timeout\", \"$filter\", \"$log\", \"$sce\", \"Config\", \"NavService\", function ($http, $timeout, $filter, $log, $sce, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(1);\n    vm.loading = true;\n    vm.chapterName = Config.name;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n        '/activities/public?callback=JSON_CALLBACK&maxResults=20&key=' + Config.googleApi)\n        .success(function (response) {\n            var entries = [], i;\n            var item, actor, object, itemTitle, html;\n            var published, actorImage, entry;\n\n            if (!response.items) {\n                handleError('Response from server contained no news items.');\n                return;\n            }\n\n            for (i = 0; i < response.items.length; i++) {\n                item = response.items[i];\n                actor = item.actor || {};\n                object = item.object || {};\n                itemTitle = object.content;\n                published = $filter('date')(new Date(item.published), 'fullDate');\n                html = [];\n\n                html.push(itemTitle.replace(new RegExp('\\n', 'g'), '<br />').replace('<br><br>', '<br />'));\n                html = html.join('');\n                html = $sce.trustAsHtml(html);\n\n                actorImage = actor.image.url;\n                actorImage = actorImage.substr(0, actorImage.length - 2) + '16';\n\n                entry = {\n                    via: {\n                        name: 'Google+',\n                        url: item.url\n                    },\n                    published: published,\n                    body: html,\n                    date: item.updated,\n                    reshares: (object.resharers || {}).totalItems,\n                    plusones: (object.plusoners || {}).totalItems,\n                    comments: (object.replies || {}).totalItems,\n                    icon: actorImage,\n                    item: item,\n                    object: object\n                };\n\n                entries.push(entry);\n            }\n            vm.news = $filter('orderBy')(entries, 'date', true);\n            $timeout(function () {\n                gapi.plusone.go();\n            });\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(handleError);\n\n    function handleError(error) {\n        vm.desc = 'Sorry, we failed to retrieve the news from the Google+ API.';\n        vm.loading = false;\n        vm.status = 'ready';\n        $log.debug('Sorry, we failed to retrieve the news from the Google+ API: ' + error);\n    }\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('OrganizersController', [\"$http\", \"Config\", \"NavService\", function ($http, Config, NavService) {\n    var vm = this;\n    vm.loading = false;\n    NavService.setNavTab(4);\n\n    var url = 'https://hub.gdgx.io/api/v1/chapters/' + Config.id + '?callback=JSON_CALLBACK';\n    var headers = { 'headers': { 'Accept': 'application/json;' }, 'timeout': 2000 };\n    $http.jsonp(url, headers).success(function (data) {\n        if (data.organizers) {\n            vm.organizers = data.organizers;\n        }\n    });\n}]);\n\nangular.module('gdgXBoomerang')\n.controller('PhotosController', [\"$http\", \"Config\", \"NavService\", function ($http, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(5);\n    vm.chapterName = Config.name;\n    vm.photos = [];\n\n    var pwa = 'https://picasaweb.google.com/data/feed/api/user/' + Config.id + '/albumid/' + Config.pwaId +\n        '?access=public&alt=json-in-script&kind=photo&max-results=50&' +\n        'fields=entry(title,link/@href,summary,content/@src)&v=2.0&callback=JSON_CALLBACK';\n\n    $http.jsonp(pwa).\n        success(function (data) {\n            var photoList = data.feed.entry;\n            var i;\n            if (photoList) {\n                // Use reverse ordering newest first\n                for (i = photoList.length - 1; i >= 0; i--) {\n                    var photo = {\n                        link: photoList[i].link[2].href,\n                        src: photoList[i].content.src,\n                        alt: photoList[i].title.$t,\n                        title: photoList[i].summary.$t\n                    };\n                    vm.photos.push(photo);\n                }\n            }\n            vm.loading = false;\n        })\n        .error(function () {\n            vm.errorMsg = 'Sorry, we failed to retrieve the photos from the Picasa Web Albums API. ' +\n                'Logging out of your Google Account and logging back in may resolve this issue.';\n            vm.loading = false;\n        });\n}]);\n\nangular.module('gdgXBoomerang')\n.directive('gplusAlbum', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: '/app/news/components/gplusAlbum.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusArticle', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: '/app/news/components/gplusArticle.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusEvent', function () {\n    return {\n        scope: { article: '=' },\n        templateUrl: '/app/news/components/gplusEvent.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusNoAttachments', function () {\n    return {\n        scope: { article: '=' },\n        templateUrl: '/app/news/components/gplusNoAttachments.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPhotoVideo', function () {\n    return {\n        scope: {\n            article: '=',\n            attachment: '='\n        },\n        templateUrl: '/app/news/components/gplusPhotoVideo.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostContent', function () {\n    return {\n        transclude: true,\n        templateUrl: '/app/news/components/gplusPostContent.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostImage', function () {\n    return {\n        templateUrl: '/app/news/components/gplusPostImage.html'\n    };\n});\n\nangular.module('gdgXBoomerang')\n.directive('gplusPostVideo', [\"$sce\", function ($sce) {\n    return {\n        link: function (scope, element) {\n            scope.videoUrl = $sce.trustAsResourceUrl(scope.attachment.embed.url);\n            scope.getDynamicHeight = function () {\n                return (element.prop('clientWidth') * 0.6) + 'px';\n            };\n        },\n        templateUrl: '/app/news/components/gplusPostVideo.html'\n    };\n}]);\n\nangular.module('gdgXBoomerang')\n.directive('newsItemFooter', function () {\n    return {\n        templateUrl: '/app/news/components/newsItemFooter.html'\n    };\n});\n\n'use strict';\n\nangular.module('gdgXBoomerang')\n.directive('gplusPerson', [\"$http\", \"$filter\", \"Config\", function ($http, $filter, Config) {\n    return {\n        restrict: 'EA',\n        templateUrl: 'app/organizers/components/gplus_person.html',\n        scope: {\n            gplusId: '='\n        },\n        link: function (scope) {\n            scope.$watch('gplusId', function (oldVal, newVal) {\n                if (newVal) {\n                    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + newVal +\n                        '?callback=JSON_CALLBACK&fields=aboutMe%2CdisplayName%2Cimage&key=' + Config.googleApi)\n                        .success(function (data) {\n                            if (data && data.image && data.image.url) {\n                                data.image.url = data.image.url.replace('sz=50', 'sz=170');\n                            }\n                            scope.person = data;\n                        });\n                }\n            });\n        }\n    };\n}]);\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}